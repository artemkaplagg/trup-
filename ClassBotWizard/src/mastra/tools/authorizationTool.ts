import { createTool } from "@mastra/core/tools";
import type { IMastraLogger } from "@mastra/core/logger";
import { z } from "zod";

// –°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∫–ª–∞—Å—Å–∞
const AUTHORIZED_USER_IDS = [
  // –í–ª–∞–¥–µ–ª—å—Ü—ã (–ø—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç—ã)
  6185367393, // –ü–µ—Ä–≤—ã–π –ø—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç
  1312687739, // –í—Ç–æ—Ä–æ–π –ø—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç
  
  // –°—Ç–∞—Ä–æ—Å—Ç–∞
  5552226319,
  
  // –£—á–µ–Ω–∏–∫–∏ 1-–π –≥—Ä—É–ø–ø—ã
  5566682926, 5241074325, 860000457, 8481372472, 5029724753,
  5650809687, 1942365829, 995840535, 5760286438, 5379148476,
  1236979350, 5339589336, 6558632830, 1240354802,
  
  // –£—á–µ–Ω–∏–∫–∏ 2-–π –≥—Ä—É–ø–ø—ã  
  5900078758, 1131216176, 5441600087, 5579250278, 1947836002,
  2018725205, 5530293880
];

// –†–æ–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
const USER_ROLES = {
  OWNER: [6185367393, 1312687739], // –í–ª–∞–¥–µ–ª—å—Ü—ã (–ø—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç—ã)
  ADMIN: [5552226319], // –°—Ç–∞—Ä–æ—Å—Ç–∞
  STUDENT: [] as number[] // –û—Å—Ç–∞–ª—å–Ω—ã–µ - —É—á–µ–Ω–∏–∫–∏
};

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Å–ø–∏—Å–æ–∫ —É—á–µ–Ω–∏–∫–æ–≤
USER_ROLES.STUDENT = AUTHORIZED_USER_IDS.filter(
  id => !USER_ROLES.OWNER.includes(id) && !USER_ROLES.ADMIN.includes(id)
);

export const authorizationTool = createTool({
  id: "authorization-check-tool",
  description: "–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —Å–∏—Å—Ç–µ–º–µ –∫–ª–∞—Å—Å–∞ –ø–æ –µ–≥–æ Telegram ID",
  inputSchema: z.object({
    userId: z.number().describe("Telegram ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏"),
  }),
  outputSchema: z.object({
    isAuthorized: z.boolean().describe("–ê–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å"),
    role: z.enum(["owner", "admin", "student", "unauthorized"]).describe("–†–æ–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —Å–∏—Å—Ç–µ–º–µ"),
    message: z.string().describe("–°–æ–æ–±—â–µ–Ω–∏–µ –æ —Å—Ç–∞—Ç—É—Å–µ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏"),
  }),
  execute: async ({ context: { userId }, mastra }) => {
    const logger = mastra?.getLogger();
    logger?.info('üîê [Authorization] –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è', { userId });

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é
    const isAuthorized = AUTHORIZED_USER_IDS.includes(userId);
    
    if (!isAuthorized) {
      logger?.warn('üö´ [Authorization] –ù–µ–∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã–π –¥–æ—Å—Ç—É–ø', { userId });
      return {
        isAuthorized: false,
        role: "unauthorized" as const,
        message: "‚ùå –î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω. –í—ã –Ω–µ —è–≤–ª—è–µ—Ç–µ—Å—å —É—á–µ–Ω–∏–∫–æ–º –¥–∞–Ω–Ω–æ–≥–æ –∫–ª–∞—Å—Å–∞."
      };
    }

    // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ä–æ–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    let role: "owner" | "admin" | "student";
    let message: string;

    if (USER_ROLES.OWNER.includes(userId)) {
      role = "owner";
      message = "üëë –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, –≤–ª–∞–¥–µ–ª–µ—Ü! –£ –≤–∞—Å –ø–æ–ª–Ω—ã–µ –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞.";
    } else if (USER_ROLES.ADMIN.includes(userId)) {
      role = "admin";
      message = "üéì –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, —Å—Ç–∞—Ä–æ—Å—Ç–∞! –£ –≤–∞—Å –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –∫–ª–∞—Å—Å–∞.";
    } else {
      role = "student";
      message = "üìö –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ —Å–∏—Å—Ç–µ–º—É –∫–ª–∞—Å—Å–∞!";
    }

    logger?.info('‚úÖ [Authorization] –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω', { userId, role });
    
    return {
      isAuthorized: true,
      role,
      message
    };
  },
});